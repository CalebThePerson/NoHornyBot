<!doctype html>
<html>
    <head>
        <title>When You Love Your Job Too Much</title>
        <meta http-equiv="content-type" content="text/html;charset=utf-8" />
        <meta name="copyright" content="Copyright 2020 Imgur, Inc." />
        <meta id="viewport" name="viewport" content="width=728, user-scalable=yes" />
        <link rel="stylesheet" type="text/css" href="//s.imgur.com/min/sharePlayer.css?1604945513" />

        <style type="text/css">
            #content, #video {
                width:  728px;
                height: 1294px;
            }

            #chrome, #progress {
                width: 728px;
            }
        </style>

        <link rel="alternate" type="application/json+oembed" href="https://api.imgur.com/oembed.json?url=https://i.imgur.com/BpIDwOX.gifv" title="When You Love Your Job Too Much" />
        <link rel="alternate" type="application/xml+oembed" href="https://api.imgur.com/oembed.xml?url=https://i.imgur.com/BpIDwOX.gifv" title="When You Love Your Job Too Much" />

        <link rel="canonical"                 href="https://i.imgur.com/BpIDwOX.gifv" />

        <meta property="og:site_name"         content="Imgur" />
                <meta property="og:title"             content="When You Love Your Job Too Much"/>
        <meta property="og:description"       content="6937620 views and 6113 votes on Imgur" />
        
        <meta property="og:type"              content="video.other" />
                <meta property="og:url"               content="https://i.imgur.com/BpIDwOX.gifv" />
        <meta property="og:image"             content="https://i.imgur.com/BpIDwOX.jpg?play" />
        <meta property="og:video:width"       content="728" />
        <meta property="og:video:height"      content="1294" />
        <meta property="og:video"             content="https://i.imgur.com/BpIDwOX.mp4" />
        <meta property="og:video:secure_url"  content="https://i.imgur.com/BpIDwOX.mp4" />
        <meta property="og:video:type"        content="video/mp4" />
        

        <meta name="twitter:site"                       content="@imgur" />
        <meta name="twitter:domain"                     content="imgur.com" />
        <meta name="twitter:app:id:googleplay"          content="com.imgur.mobile" />
        <meta name="twitter:card"                       content="player" />
                <meta name="twitter:title"                      content="When You Love Your Job Too Much"/>
        <meta name="twitter:description"                content="6937620 views and 6113 votes on Imgur" />
        
        <meta name="twitter:image"                      content="https://i.imgur.com/BpIDwOX.jpg?play" />
        <meta name="twitter:player"                     content="https://i.imgur.com/BpIDwOX.gifv?twitter#t" />
        <meta name="twitter:player:width"               content="728" />
        <meta name="twitter:player:height"              content="1294" />
        <meta name="twitter:player:stream"              content="https://i.imgur.com/BpIDwOX.mp4" />
        <meta name="twitter:player:stream:content_type" content="video/mp4">
        <meta name="monetization" content="$ilp.uphold.com/qgnqweAYkhkH">
        <!-- Quantcast Choice. Consent Manager Tag v2.0 (for TCF 2.0) -->
<script type="text/javascript" async=true>
    (function () {
        var host = 'imgur.com';
        var element = document.createElement('script');
        var firstScript = document.getElementsByTagName('script')[0];
        var url = 'https://quantcast.mgr.consensu.org'
            .concat('/choice/', 'f8oruOqDFlMeI', '/', host, '/choice.js')
        var uspTries = 0;
        var uspTriesLimit = 3;
        element.async = true;
        element.type = 'text/javascript';
        element.src = url;
        element.onload = function () {
            var event = document.createEvent('Event');
            event.initEvent('cmpLoaded', true, true);
            window.dispatchEvent(event);
        };
        firstScript.parentNode.insertBefore(element, firstScript);
        function makeStub() {
            var TCF_LOCATOR_NAME = '__tcfapiLocator';
            var queue = [];
            var win = window;
            var cmpFrame;
            function addFrame() {
                var doc = win.document;
                var otherCMP = !!(win.frames[TCF_LOCATOR_NAME]);
                if (!otherCMP) {
                    if (doc.body) {
                        var iframe = doc.createElement('iframe');
                        iframe.style.cssText = 'display:none';
                        iframe.name = TCF_LOCATOR_NAME;
                        doc.body.appendChild(iframe);
                    } else {
                        setTimeout(addFrame, 5);
                    }
                }
                return !otherCMP;
            }
            function tcfAPIHandler() {
                var gdprApplies;
                var args = arguments;
                if (!args.length) {
                    return queue;
                } else if (args[0] === 'setGdprApplies') {
                    if (
                        args.length > 3 &&
                        args[2] === 2 &&
                        typeof args[3] === 'boolean'
                    ) {
                        gdprApplies = args[3];
                        if (typeof args[2] === 'function') {
                            args[2]('set', true);
                        }
                    }
                } else if (args[0] === 'ping') {
                    var retr = {
                        gdprApplies: gdprApplies,
                        cmpLoaded: false,
                        cmpStatus: 'stub'
                    };
                    if (typeof args[2] === 'function') {
                        args[2](retr);
                    }
                } else {
                    queue.push(args);
                }
            }
            function postMessageEventHandler(event) {
                var msgIsString = typeof event.data === 'string';
                var json = {};
                try {
                    if (msgIsString) {
                        json = JSON.parse(event.data);
                    } else {
                        json = event.data;
                    }
                } catch (ignore) { }
                var payload = json.__tcfapiCall;
                if (payload) {
                    window.__tcfapi(
                        payload.command,
                        payload.version,
                        function (retValue, success) {
                            var returnMsg = {
                                __tcfapiReturn: {
                                    returnValue: retValue,
                                    success: success,
                                    callId: payload.callId
                                }
                            };
                            if (msgIsString) {
                                returnMsg = JSON.stringify(returnMsg);
                            }
                            event.source.postMessage(returnMsg, '*');
                        },
                        payload.parameter
                    );
                }
            }
            while (win) {
                try {
                    if (win.frames[TCF_LOCATOR_NAME]) {
                        cmpFrame = win;
                        break;
                    }
                } catch (ignore) { }
                if (win === window.top) {
                    break;
                }
                win = win.parent;
            }
            if (!cmpFrame) {
                addFrame();
                win.__tcfapi = tcfAPIHandler;
                win.addEventListener('message', postMessageEventHandler, false);
            }
        };
        makeStub();
        var uspStubFunction = function () {
            var arg = arguments;
            if (typeof window.__uspapi !== uspStubFunction) {
                setTimeout(function () {
                    if (typeof window.__uspapi !== 'undefined') {
                        window.__uspapi.apply(window.__uspapi, arg);
                    }
                }, 500);
            }
        };
        var checkIfUspIsReady = function () {
            uspTries++;
            if (window.__uspapi === uspStubFunction && uspTries < uspTriesLimit) {
                console.warn('USP is not accessible');
            } else {
                clearInterval(uspInterval);
            }
        };
        if (typeof window.__uspapi === 'undefined') {
            window.__uspapi = uspStubFunction;
            var uspInterval = setInterval(checkIfUspIsReady, 6000);
        }
    })();
</script>
<!-- End Quantcast Choice. Consent Manager Tag v2.0 (for TCF 2.0) -->


        <!--[if lte IE 8]><script type="text/javascript" src="//s.imgur.com/min/iepoly.js?1604945513"></script>
<![endif]-->
    </head>
    <body id="body">
        
        <div id="content">
            <script type="text/javascript">
                window.image        = 'BpIDwOX';
                window.image_size   = '78368322';
                window.image_width  = '728';
                window.image_height = '1294';
                window.cdn_url      = '//i.imgur.com';

                if(navigator.userAgent.match(/Firefox/)) {
                    document.body.className = document.body.className + ' firefox';
                }
            </script>
            <div class="vid-container">
                
                
                
                <div class="post-image">
    

            <div class="video-container">
            <script type="text/javascript">
                var videoItem = {
                    looping:  true,
                    width:    728,
                    height:   1294,
                    size:     78368322,
                    gifUrl:   '//i.imgur.com/BpIDwOX.gif',
                    forceGif: false,
                    prefer_video: true,
                    hash:     'BpIDwOX',
                    forceLoadAll: false,
                }
            </script>
            <video poster="//i.imgur.com/BpIDwOXh.jpg"
                preload="auto"
                autoplay="autoplay"
                muted="muted"  loop="loop"
            webkit-playsinline></video>
            <div class="video-elements">
                <source src="//i.imgur.com/BpIDwOX.mp4" type="video/mp4">
            </div>
            <progress value="0" max="100" min="0"></progress>
            <div class="video-loader"></div>
            <script id="scriptBpIDwOX" type="text/javascript" src="//s.imgur.com/min/imageViewerInline.js?1604945513"></script>

            <meta itemprop="thumbnailUrl" content="https://i.imgur.com/BpIDwOXh.jpg" />
            <meta itemprop="contentURL" content="https://i.imgur.com/BpIDwOX.mp4" />
            <meta itemprop="embedURL" content="https://i.imgur.com/BpIDwOX.gifv" />
        </div>
    
</div>

            </div>
            <script type="text/javascript">
            var pixel_url = '//i.imgur.com/imageview.gif?a=BpIDwOX&r=' + encodeURIComponent(document.referrer);
            var pixel = document.createElement('img');
            pixel.src = pixel_url;
            </script>

            <div id="chrome">
                <div class="icon">
                    <a href="//imgur.com/BpIDwOX"><img src="//i.imgur.com/favicon.ico" /></a>
                </div>
                <div class="imgur">
                    <a href="//imgur.com/BpIDwOX">Imgur</a>
                </div>
                <div class="controls">
                    <a href="//imgur.com/download/BpIDwOX">download</a>
                </div>
                <div class="clear"></div>
            </div>
        </div>
        <script type="text/javascript" src="//s.imgur.com/min/sharePlayer.js?1604945513"></script>

        <script>
    // implemented following recommendations here: https://docs.coil.com/oauth-web-monetization
    var owmto;
    function getBtpToken(successCallback) {
        if (Imgur.Environment && Imgur.Environment.subscription.isSubscribed === false) {
            return;
        }
        $.ajax({
            url: 'https://api.imgur.com' + '/account/v1/accounts/me/subscriptions/coil/btp',
            xhrFields: {
                withCredentials: true,
            },
            displayGenericError : false,
            success: successCallback
        });
    }

    function setRefreshTimeout(refreshFunc) {
        if (owmto) {
            clearTimeout(owmto);
        }
        // refresh btpToken every 25 minutes.
        owmto = setTimeout(refreshFunc, 1.5e+6);
    }

    function refreshBtp() {
        var refreshCB = function(data) {
            document.coilMonetizationPolyfill.refreshBtpToken(data.btp_token);
            setRefreshTimeout(refreshBtp);
        };

        getBtpToken(refreshCB);
    }

    function initMonetizationFallback(){
        var initCB = function(data) {
            Imgur.getInstance().bindMonetizationStartListener();
            document.coilMonetizationPolyfill.init({
                btpToken: data.btp_token,
                btpEndpoint: 'btp+wss://coil.com/btp'
            });
            window.addEventListener('focus', refreshBtp);
            setRefreshTimeout(refreshBtp);
        };

        getBtpToken(initCB);
    }

    if (document.monetization) {
        document.monetizationExtensionInstalled = true;
    } else {
        document.monetization = document.createElement('div');
        document.monetization.state = 'stopped';
        var head = document.getElementsByTagName('head')[0];
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.defer = true
        script.src = 'https://cdn.coil.com/coil-oauth-wm.v7.beta.js';
        script.onload = function() {
            initMonetizationFallback();
        };
        head.appendChild(script);
    }
</script>

    </body>
</html>
